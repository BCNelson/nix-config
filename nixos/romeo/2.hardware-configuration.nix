# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ inputs, config, lib, modulesPath, pkgs,... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
      inputs.nixos-hardware.nixosModules.common-gpu-intel
      inputs.nixos-hardware.nixosModules.common-cpu-amd
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "mpt3sas" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/a8500844-3dc2-4ac0-b443-adf3d75b512c";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/6D58-A60D";
      fsType = "vfat";
    };

  boot.zfs = {
    extraPools = [ "vault" "scary" ];
    forceImportRoot = false;
    devNodes = "/dev/disk/by-partlabel";
  };
  services.zfs.autoScrub.enable = true;

  swapDevices = [ ];

  hardware.enableAllFirmware = true;
  hardware.enableRedistributableFirmware = true;
  hardware.intelgpu.driver = "i915";
  hardware.graphics = {
    enable = true;
    extraPackages = with pkgs; [
      intel-compute-runtime    # Critical: OpenCL runtime
      intel-media-driver      # VA-API driver
      level-zero              # Level Zero API for optimal performance
      vpl-gpu-rt             # Video processing library
      ocl-icd                # OpenCL ICD loader
      intel-gmmlib           # Graphics Memory Management Library
      intel-igc              # Intel Graphics Compiler
    ];
  };

  environment.sessionVariables = {
    LIBVA_DRIVER_NAME = "iHD";
    OCL_ICD_VENDORS = "${pkgs.intel-compute-runtime}/etc/OpenCL/vendors/";
  };

  boot.kernelParams = [ 
    "i915.force_probe=*"     # Ensure Arc GPU detection
    "i915.enable_guc=2"      # Enable GuC firmware for compute
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp11s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.tailscale0.useDHCP = lib.mkDefault true;
  networking.hostId = "aa99924f";

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
